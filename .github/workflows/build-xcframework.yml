name: Build XCFramework

on:
  pull_request:

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  build:
    name: Build
    # run on mac so iOS compilation is executed as well
    runs-on: macos-15
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Setup Java JDK
        uses: actions/setup-java@v5
        with:
          distribution: "temurin"
          java-version-file: ".java-version"
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
      - name: Cache Konan
        uses: actions/cache@v4
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ github.sha }}
          restore-keys: ${{ runner.os }}-konan-
      - name: Build
        run: ./gradlew assemble --scan

  build_and_upload_xcframework:
    name: Build And Upload XCFramework
    runs-on: macos-15
    outputs:
      godtools_shared_zip_file_name: ${{ steps.godtools_shared_zip_file_name.outputs.value }}
      swift_package_checksum: ${{ steps.swift_package_checksum.outputs.value }}
      tag_version: ${{ steps.tag_version.outputs.value }}
    needs: [ build ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Run Command Gradle AssembleXCFramework
        run: ./gradlew assembleGodToolsSharedXCFramework --warning-mode all
      - name: Store Tag version
        id: tag_version
        run: echo "value=0.0.5" >> $GITHUB_OUTPUT
      - name: Store Zip Name with Version
        id: godtools_shared_zip_file_name
        run: echo "value=GodToolsShared-${{ steps.tag_version.outputs.value }}.xcframework.zip" >> $GITHUB_OUTPUT
      - name: Store Release XCFramework Directory
        id: xcframework_directory
        run: echo "value=/Users/runner/work/kotlin-mpp-godtools-tool-parser/kotlin-mpp-godtools-tool-parser/publishing/spm/build/XCFrameworks/release" >> $GITHUB_OUTPUT
      - name: Run Command Zip
        run: | 
          cd ${{ steps.xcframework_directory.outputs.value }}
          zip -r ${{ steps.godtools_shared_zip_file_name.outputs.value }} GodToolsShared.xcframework
      - name: Compute Checksum
        id: swift_package_checksum
        run: | 
          cd ${{ steps.xcframework_directory.outputs.value }}
          echo "value=$(swift package compute-checksum ${{ steps.godtools_shared_zip_file_name.outputs.value }})" >> $GITHUB_OUTPUT        
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        with:
          disable-auto-build-publish: true
        env:
          JF_URL: 'https://cruglobal.jfrog.io'
          JF_USER: ${{ secrets.JFROG_USERNAME }}
          JF_PASSWORD: ${{ secrets.JFROG_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: JFrog Upload XCFramework Zip
        run: | 
          cd ${{ steps.xcframework_directory.outputs.value }}
          jf rt u ${{ steps.godtools_shared_zip_file_name.outputs.value }} swift-snapshots-local/CruGlobal/GodToolsShared/${{ steps.godtools_shared_zip_file_name.outputs.value }}
      # - name: Archive Build
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: xcode-logs
      #     path: "/Users/runner/work/kotlin-mpp-godtools-tool-parser/kotlin-mpp-godtools-tool-parser/publishing/spm/build/XCFrameworks/"
      
  update_and_tag_package_swift:
    name: Update And Tag Package Swift
    runs-on: ubuntu-latest
    needs: [ build_and_upload_xcframework ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: GodToolsShared SSH Key
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.GODTOOLS_SHARED_SSH_KEY }}
      - name: Checkout GodToolsShared Repo
        uses: actions/checkout@v5
        with:
          repository: CruGlobal/godtools-shared-spm-godtools-shared-swift
          ssh-key: ${{ secrets.GODTOOLS_SHARED_SSH_KEY }}
      - name: Create Package.swift File
        uses: DamianReeves/write-file-action@master
        with:
          path: Package.swift
          contents: |
            // swift-tools-version: 5.9
            // The swift-tools-version declares the minimum version of Swift required to build this package.

            import PackageDescription

            let package = Package(
              name: "GodToolsShared",
              platforms: [
                .iOS(.v16),
              ],
              products: [
                  .library(name: "GodToolsShared", targets: ["GodToolsShared"])
              ],
              dependencies: [],
              targets: [
                  .binaryTarget(
                    name: "GodToolsShared",
                    url: "https://cruglobal.jfrog.io/artifactory/swift-snapshots-local/CruGlobal/GodToolsShared/${{ needs.build_and_upload_xcframework.outputs.godtools_shared_zip_file_name }}",
                    checksum: "${{ needs.build_and_upload_xcframework.outputs.swift_package_checksum }}"
                  )
              ]
            )
          write-mode: overwrite
      - name: Push Package.swift to GodTools Shared Swift Repo
        uses: dmnemec/copy_file_to_another_repo_action@main
        with:
          source_file: Package.swift
          destination_repo: CruGlobal/godtools-shared-spm-godtools-shared-swift
          user_email: levi.eggert@cru.org
          user_name: levieggertcru
          commit_message: Update package version ${{ needs.build_and_upload_xcframework.outputs.tag_version }}
      - name: Tag GodTools Shared Swift Repo
        uses: actions/checkout@v5
        with: 
          repository: CruGlobal/godtools-shared-spm-godtools-shared-swift
      - name: Create Tag
        env:
          TAG_NAME: ${{ needs.build_and_upload_xcframework.outputs.tag_version }}
        run: |
          git tag $TAG_NAME
          git push origin $TAG_NAME