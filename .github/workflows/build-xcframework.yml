name: Build XCFramework

on:
  pull_request:

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  build_xcframework:
    name: Build XCFramework
    runs-on: macos-15
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Setup Java JDK
        uses: actions/setup-java@v5
        with:
          distribution: "temurin"
          java-version-file: ".java-version"
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
      - name: Cache Konan
        uses: actions/cache@v4
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ github.sha }}
          restore-keys: ${{ runner.os }}-konan-
      - name: Build
        run: ./gradlew assemble --scan
      - name: Run Command Gradle AssembleXCFramework
        run: ./gradlew assembleGodToolsSharedXCFramework --warning-mode all
      - name: Store Tag version
        id: tag_version
        run: echo "value=0.0.25" >> $GITHUB_OUTPUT
      - name: Store Zip Name with Version
        id: godtools_shared_zip_file_name
        run: echo "value=GodToolsShared-${{ steps.tag_version.outputs.value }}.xcframework.zip" >> $GITHUB_OUTPUT
      - name: Store XCFramework Directory In output
        id: xcframework_directory
        run: echo "value=/Users/runner/work/kotlin-mpp-godtools-tool-parser/kotlin-mpp-godtools-tool-parser/publishing/spm/build/XCFrameworks/release" >> $GITHUB_OUTPUT
      - name: Run Command Zip
        run: zip -r ${{ steps.xcframework_directory.outputs.value }}/${{ steps.godtools_shared_zip_file_name.outputs.value }} ${{ steps.xcframework_directory.outputs.value }}/GodToolsShared.xcframework
      - name: Compute Checksum
        id: swift_package_checksum
        run: echo "value=$(swift package compute-checksum ${{ steps.xcframework_directory.outputs.value }}/${{ steps.godtools_shared_zip_file_name.outputs.value }})" >> $GITHUB_OUTPUT        
      # - name: Setup JFrog CLI
      #   uses: jfrog/setup-jfrog-cli@v4
      #   with:
      #     disable-auto-build-publish: true
      #   env:
      #     JF_URL: 'https://cruglobal.jfrog.io/artifactory/swift-snapshots-local/'
      #     JF_USER: ${{ secrets.JF_USER }}
      #     JF_PASSWORD: ${{ secrets.JF_PASSWORD }}
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Change Directory to XCFramework Location
        run: cd ${{ steps.xcframework_directory.outputs.value }}
      - name: Create Package.swift
        uses: ./.github/actions/create-package-swift-file
        with:
          binary_target_url: "https://cruglobal.jfrog.io/artifactory/swift-snapshots-local/CruGlobal/GodToolsShared/${{ steps.godtools_shared_zip_file_name.outputs.value }}"
          binary_target_checksum: ${{ steps.swift_package_checksum.outputs.value }}
      - name: Swift Package Registry Set
        run: swift package-registry set https://cruglobal.jfrog.io
      - name: Swift Package Registry Login
        run: swift package-registry login https://cruglobal.jfrog.io/artifactory --username ${{ secrets.JFROG_SWIFT_CLIENT_USER_EMAIL }} --password ${{ secrets.JFROG_SWIFT_CLIENT_TOKEN }}
      # - name: Add Credentials
      #   uses: extractions/netrc@v2
      #   with:
      #     machine: cruglobal.jfrog.io
      #     username: ${{ secrets.JFROG_SWIFT_CLIENT_USER_EMAIL }}
      #     password: ${{ secrets.JFROG_SWIFT_CLIENT_TOKEN }}
      - name: Swift Package Registry Publish
        run: swift package-registry publish CruGlobal.GodToolsShared ${{ steps.tag_version.outputs.value }} --url https://cruglobal.jfrog.io/artifactory/swift-snapshots-local
      # - name: JFrog Upload XCFramework Zip
      #   run: jf rt upload "${{ steps.xcframework_directory.outputs.value }}/GodToolsShared.xcframework.zip" "CruGlobal/GodToolsShared/GodToolsShared-1.0.0.zip"
      # - name: Create Package.swift
      #   uses: ./.github/actions/create-package-swift-file
      #   with:
      #     binary_target_checksum: ${{ steps.swift_package_checksum.outputs.value }}
      - name: Archive Build
        uses: actions/upload-artifact@v4
        with:
          name: xcode-logs
          path: "/Users/runner/work/kotlin-mpp-godtools-tool-parser/kotlin-mpp-godtools-tool-parser/publishing/spm/build/XCFrameworks/"